# Generated by Django 3.2.10 on 2022-05-20 12:59

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('jobportals', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Employer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(max_length=11)),
                ('direct_corporate_phone_number', models.CharField(max_length=11)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FieldOfStudy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='JobDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_title', models.CharField(max_length=255)),
                ('organizational_category', models.CharField(max_length=255)),
                ('type_of_cooperation', models.CharField(max_length=255)),
                ('possibility_of_telecommuting', models.BooleanField()),
                ('field_of_individual_activity', models.CharField(max_length=255)),
                ('working_hoursand_days', models.CharField(help_text='for example: 9 AM-5 PM all day of week', max_length=255)),
                ('minimum_age', models.CharField(choices=[(18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30), (31, 31), (32, 32), (33, 33), (34, 34), (35, 35), (36, 36), (37, 37), (38, 38), (39, 39), (40, 40), (41, 41), (42, 42), (43, 43), (44, 44), (45, 45), (46, 46), (47, 47), (48, 48), (49, 49)], max_length=2)),
                ('maximum_age', models.CharField(choices=[(18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30), (31, 31), (32, 32), (33, 33), (34, 34), (35, 35), (36, 36), (37, 37), (38, 38), (39, 39), (40, 40), (41, 41), (42, 42), (43, 43), (44, 44), (45, 45), (46, 46), (47, 47), (48, 48), (49, 49)], max_length=2)),
                ('gender', models.CharField(choices=[('N', 'Does not matter'), ('F', 'Female'), ('M', 'Male')], default='N', max_length=1)),
                ('attract_an_intern', models.BooleanField()),
                ('attracting_the_disabled', models.BooleanField()),
                ('completion_of_military_service', models.BooleanField()),
                ('the_amount_of_work_experience', models.CharField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17)], max_length=2)),
                ('degree_level', models.CharField(choices=[('DI', 'Diploma'), ('AS', 'Associate'), ('BA', 'Bachelor'), ('MA', 'Master'), ('DO', 'Doctoral')], max_length=2)),
                ('salary', models.CharField(choices=[('6-8', '6 to 8 million tomans'), ('8-10', '8 to 10 million tomans'), ('10-12', '10 to 12 million tomans'), ('12-16', '12 to 16 million tomans'), ('16-20', '16 to 20 million tomans'), ('20-25', '20 to 25 million tomans'), ('25 - ?', '25 million tomans and above')], max_length=6)),
                ('facilities_and_benefits', models.CharField(blank=True, max_length=255, null=True)),
                ('job_description', models.TextField(blank=True, null=True)),
                ('employer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='jobportals.employer')),
                ('field_of_Study', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='jobportals.fieldofstudy')),
            ],
        ),
        migrations.CreateModel(
            name='LanguageTitle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='SoftwareSkillCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_title', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='SoftwareSkillTitle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('softwareskillcategory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jobportals.softwareskillcategory')),
            ],
        ),
        migrations.CreateModel(
            name='SoftwareSkill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skill_level', models.CharField(choices=[('L', 'Advanced'), ('M', 'Medium'), ('I', 'Introductory')], max_length=1)),
                ('employer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='employer_softwareskill', to='jobportals.employer')),
                ('jobdetail', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='jobdetail_softwareskill', to='jobportals.jobdetail')),
                ('jobseeker', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='jobseeker_softwareskill', to='jobportals.jobseeker')),
                ('softwareskillcategory', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='jobportals.softwareskillcategory')),
                ('title', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='jobportals.softwareskilltitle')),
            ],
            options={
                'ordering': ['title', 'skill_level', 'softwareskillcategory'],
            },
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skill_level', models.CharField(choices=[('A', 'Advanced'), ('M', 'Medium'), ('I', 'Introductory')], max_length=1)),
                ('employer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='employer_language', to='jobportals.employer')),
                ('jobdetail', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='jobdetail_language', to='jobportals.jobdetail')),
                ('jobseeker', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='jobseeker_language', to='jobportals.jobseeker')),
                ('languagetitle', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='jobportals.languagetitle')),
            ],
            options={
                'ordering': ['languagetitle', 'skill_level'],
            },
        ),
        migrations.CreateModel(
            name='EducationalBackground',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('degree_level', models.CharField(choices=[('DI', 'Diploma'), ('AS', 'Associate'), ('BA', 'Bachelor'), ('MA', 'Master'), ('DO', 'Doctoral')], max_length=2)),
                ('university', models.CharField(max_length=255)),
                ('gpa', models.DecimalField(decimal_places=2, max_digits=6, null=True)),
                ('from_year', models.IntegerField(blank=True, choices=[(1900, 1900), (1901, 1901), (1902, 1902), (1903, 1903), (1904, 1904), (1905, 1905), (1906, 1906), (1907, 1907), (1908, 1908), (1909, 1909), (1910, 1910), (1911, 1911), (1912, 1912), (1913, 1913), (1914, 1914), (1915, 1915), (1916, 1916), (1917, 1917), (1918, 1918), (1919, 1919), (1920, 1920), (1921, 1921), (1922, 1922), (1923, 1923), (1924, 1924), (1925, 1925), (1926, 1926), (1927, 1927), (1928, 1928), (1929, 1929), (1930, 1930), (1931, 1931), (1932, 1932), (1933, 1933), (1934, 1934), (1935, 1935), (1936, 1936), (1937, 1937), (1938, 1938), (1939, 1939), (1940, 1940), (1941, 1941), (1942, 1942), (1943, 1943), (1944, 1944), (1945, 1945), (1946, 1946), (1947, 1947), (1948, 1948), (1949, 1949), (1950, 1950), (1951, 1951), (1952, 1952), (1953, 1953), (1954, 1954), (1955, 1955), (1956, 1956), (1957, 1957), (1958, 1958), (1959, 1959), (1960, 1960), (1961, 1961), (1962, 1962), (1963, 1963), (1964, 1964), (1965, 1965), (1966, 1966), (1967, 1967), (1968, 1968), (1969, 1969), (1970, 1970), (1971, 1971), (1972, 1972), (1973, 1973), (1974, 1974), (1975, 1975), (1976, 1976), (1977, 1977), (1978, 1978), (1979, 1979), (1980, 1980), (1981, 1981), (1982, 1982), (1983, 1983), (1984, 1984), (1985, 1985), (1986, 1986), (1987, 1987), (1988, 1988), (1989, 1989), (1990, 1990), (1991, 1991), (1992, 1992), (1993, 1993), (1994, 1994), (1995, 1995), (1996, 1996), (1997, 1997), (1998, 1998), (1999, 1999), (2000, 2000), (2001, 2001), (2002, 2002), (2003, 2003), (2004, 2004), (2005, 2005), (2006, 2006), (2007, 2007), (2008, 2008), (2009, 2009), (2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020), (2021, 2021)], null=True)),
                ('from_month', models.IntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12)], null=True)),
                ('to_year', models.IntegerField(blank=True, choices=[(1900, 1900), (1901, 1901), (1902, 1902), (1903, 1903), (1904, 1904), (1905, 1905), (1906, 1906), (1907, 1907), (1908, 1908), (1909, 1909), (1910, 1910), (1911, 1911), (1912, 1912), (1913, 1913), (1914, 1914), (1915, 1915), (1916, 1916), (1917, 1917), (1918, 1918), (1919, 1919), (1920, 1920), (1921, 1921), (1922, 1922), (1923, 1923), (1924, 1924), (1925, 1925), (1926, 1926), (1927, 1927), (1928, 1928), (1929, 1929), (1930, 1930), (1931, 1931), (1932, 1932), (1933, 1933), (1934, 1934), (1935, 1935), (1936, 1936), (1937, 1937), (1938, 1938), (1939, 1939), (1940, 1940), (1941, 1941), (1942, 1942), (1943, 1943), (1944, 1944), (1945, 1945), (1946, 1946), (1947, 1947), (1948, 1948), (1949, 1949), (1950, 1950), (1951, 1951), (1952, 1952), (1953, 1953), (1954, 1954), (1955, 1955), (1956, 1956), (1957, 1957), (1958, 1958), (1959, 1959), (1960, 1960), (1961, 1961), (1962, 1962), (1963, 1963), (1964, 1964), (1965, 1965), (1966, 1966), (1967, 1967), (1968, 1968), (1969, 1969), (1970, 1970), (1971, 1971), (1972, 1972), (1973, 1973), (1974, 1974), (1975, 1975), (1976, 1976), (1977, 1977), (1978, 1978), (1979, 1979), (1980, 1980), (1981, 1981), (1982, 1982), (1983, 1983), (1984, 1984), (1985, 1985), (1986, 1986), (1987, 1987), (1988, 1988), (1989, 1989), (1990, 1990), (1991, 1991), (1992, 1992), (1993, 1993), (1994, 1994), (1995, 1995), (1996, 1996), (1997, 1997), (1998, 1998), (1999, 1999), (2000, 2000), (2001, 2001), (2002, 2002), (2003, 2003), (2004, 2004), (2005, 2005), (2006, 2006), (2007, 2007), (2008, 2008), (2009, 2009), (2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020), (2021, 2021)], null=True)),
                ('to_month', models.IntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12)], null=True)),
                ('studying', models.BooleanField()),
                ('employer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='employer_educationalbackground', to='jobportals.employer')),
                ('field_of_Study', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jobportals.fieldofstudy')),
                ('jobdetail', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='jobdetail_educationalbackground', to='jobportals.jobdetail')),
                ('jobseeker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='jobseeker_educationalbackground', to='jobportals.jobseeker')),
            ],
            options={
                'ordering': ['degree_level', 'university', 'gpa'],
            },
        ),
        migrations.CreateModel(
            name='BasicInformationOfOrganization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_of_organization', models.CharField(max_length=255)),
                ('website_url', models.CharField(max_length=255)),
                ('organization_phone_number', models.CharField(max_length=20)),
                ('industry', models.CharField(max_length=255)),
                ('organization_size', models.PositiveIntegerField()),
                ('introduction_of_company', models.CharField(max_length=255)),
                ('companys_field_of_work', models.CharField(max_length=255)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='jobportals.city')),
                ('employer', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='jobportals.employer')),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='jobportals.state')),
            ],
        ),
        migrations.CreateModel(
            name='Applicant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cover_letter', models.TextField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('applicant_status', models.CharField(choices=[('P', 'Pending'), ('R', 'Rejected'), ('I', 'Interview'), ('H', 'Hire')], max_length=1)),
                ('jobdetail', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='jobportals.jobdetail')),
                ('jobseeker', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='jobportals.jobseeker')),
            ],
        ),
        migrations.CreateModel(
            name='WorkExperience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_title', models.CharField(max_length=255)),
                ('job_category', models.CharField(max_length=255)),
                ('seniority_level', models.CharField(max_length=255)),
                ('company_name', models.CharField(max_length=255)),
                ('from_month', models.IntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12)], null=True)),
                ('from_year', models.IntegerField(blank=True, choices=[(1900, 1900), (1901, 1901), (1902, 1902), (1903, 1903), (1904, 1904), (1905, 1905), (1906, 1906), (1907, 1907), (1908, 1908), (1909, 1909), (1910, 1910), (1911, 1911), (1912, 1912), (1913, 1913), (1914, 1914), (1915, 1915), (1916, 1916), (1917, 1917), (1918, 1918), (1919, 1919), (1920, 1920), (1921, 1921), (1922, 1922), (1923, 1923), (1924, 1924), (1925, 1925), (1926, 1926), (1927, 1927), (1928, 1928), (1929, 1929), (1930, 1930), (1931, 1931), (1932, 1932), (1933, 1933), (1934, 1934), (1935, 1935), (1936, 1936), (1937, 1937), (1938, 1938), (1939, 1939), (1940, 1940), (1941, 1941), (1942, 1942), (1943, 1943), (1944, 1944), (1945, 1945), (1946, 1946), (1947, 1947), (1948, 1948), (1949, 1949), (1950, 1950), (1951, 1951), (1952, 1952), (1953, 1953), (1954, 1954), (1955, 1955), (1956, 1956), (1957, 1957), (1958, 1958), (1959, 1959), (1960, 1960), (1961, 1961), (1962, 1962), (1963, 1963), (1964, 1964), (1965, 1965), (1966, 1966), (1967, 1967), (1968, 1968), (1969, 1969), (1970, 1970), (1971, 1971), (1972, 1972), (1973, 1973), (1974, 1974), (1975, 1975), (1976, 1976), (1977, 1977), (1978, 1978), (1979, 1979), (1980, 1980), (1981, 1981), (1982, 1982), (1983, 1983), (1984, 1984), (1985, 1985), (1986, 1986), (1987, 1987), (1988, 1988), (1989, 1989), (1990, 1990), (1991, 1991), (1992, 1992), (1993, 1993), (1994, 1994), (1995, 1995), (1996, 1996), (1997, 1997), (1998, 1998), (1999, 1999), (2000, 2000), (2001, 2001), (2002, 2002), (2003, 2003), (2004, 2004), (2005, 2005), (2006, 2006), (2007, 2007), (2008, 2008), (2009, 2009), (2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020), (2021, 2021)], null=True)),
                ('to_year', models.IntegerField(blank=True, choices=[(1900, 1900), (1901, 1901), (1902, 1902), (1903, 1903), (1904, 1904), (1905, 1905), (1906, 1906), (1907, 1907), (1908, 1908), (1909, 1909), (1910, 1910), (1911, 1911), (1912, 1912), (1913, 1913), (1914, 1914), (1915, 1915), (1916, 1916), (1917, 1917), (1918, 1918), (1919, 1919), (1920, 1920), (1921, 1921), (1922, 1922), (1923, 1923), (1924, 1924), (1925, 1925), (1926, 1926), (1927, 1927), (1928, 1928), (1929, 1929), (1930, 1930), (1931, 1931), (1932, 1932), (1933, 1933), (1934, 1934), (1935, 1935), (1936, 1936), (1937, 1937), (1938, 1938), (1939, 1939), (1940, 1940), (1941, 1941), (1942, 1942), (1943, 1943), (1944, 1944), (1945, 1945), (1946, 1946), (1947, 1947), (1948, 1948), (1949, 1949), (1950, 1950), (1951, 1951), (1952, 1952), (1953, 1953), (1954, 1954), (1955, 1955), (1956, 1956), (1957, 1957), (1958, 1958), (1959, 1959), (1960, 1960), (1961, 1961), (1962, 1962), (1963, 1963), (1964, 1964), (1965, 1965), (1966, 1966), (1967, 1967), (1968, 1968), (1969, 1969), (1970, 1970), (1971, 1971), (1972, 1972), (1973, 1973), (1974, 1974), (1975, 1975), (1976, 1976), (1977, 1977), (1978, 1978), (1979, 1979), (1980, 1980), (1981, 1981), (1982, 1982), (1983, 1983), (1984, 1984), (1985, 1985), (1986, 1986), (1987, 1987), (1988, 1988), (1989, 1989), (1990, 1990), (1991, 1991), (1992, 1992), (1993, 1993), (1994, 1994), (1995, 1995), (1996, 1996), (1997, 1997), (1998, 1998), (1999, 1999), (2000, 2000), (2001, 2001), (2002, 2002), (2003, 2003), (2004, 2004), (2005, 2005), (2006, 2006), (2007, 2007), (2008, 2008), (2009, 2009), (2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020), (2021, 2021)], null=True)),
                ('to_month', models.IntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12)], null=True)),
                ('current_job', models.BooleanField()),
                ('achievements_and_main_tasks', models.TextField(max_length=1000)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='jobportals.city')),
                ('jobseeker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='jobseeker_workexperience', to='jobportals.jobseeker')),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='jobportals.state')),
            ],
            options={
                'ordering': ['job_title', 'job_category', 'seniority_level', 'company_name', 'state', 'city', 'current_job'],
                'index_together': {('from_month', 'to_month'), ('from_year', 'to_year')},
            },
        ),
        migrations.AddConstraint(
            model_name='softwareskill',
            constraint=models.CheckConstraint(check=models.Q(('jobseeker__isnull', False), ('jobdetail__isnull', False), _connector='OR'), name='not_both_null2'),
        ),
        migrations.AddConstraint(
            model_name='language',
            constraint=models.CheckConstraint(check=models.Q(('jobseeker__isnull', False), ('jobdetail__isnull', False), _connector='OR'), name='not_both_null'),
        ),
        migrations.AlterIndexTogether(
            name='jobdetail',
            index_together={('minimum_age', 'maximum_age')},
        ),
        migrations.AddConstraint(
            model_name='educationalbackground',
            constraint=models.CheckConstraint(check=models.Q(('jobseeker__isnull', False), ('jobdetail__isnull', False), _connector='OR'), name='not_both_null4'),
        ),
        migrations.AlterIndexTogether(
            name='educationalbackground',
            index_together={('from_month', 'to_month'), ('from_year', 'to_year')},
        ),
        migrations.AddConstraint(
            model_name='applicant',
            constraint=models.CheckConstraint(check=models.Q(('jobseeker__isnull', False), ('jobdetail__isnull', False), _connector='OR'), name='not_both_null3'),
        ),
    ]
